(window.webpackJsonp=window.webpackJsonp||[]).push([[25],{213:function(t,a,s){"use strict";s.r(a);var n=s(0),e=Object(n.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("div",{staticClass:"content"},[s("h1",{attrs:{id:"diff"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#diff","aria-hidden":"true"}},[t._v("#")]),t._v(" Diff")]),t._v(" "),s("h3",{attrs:{id:"diff-用于比较两个文件的内容差异，可以被制作成补丁文件，使用-patch-命令对相应的文件打补丁"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#diff-用于比较两个文件的内容差异，可以被制作成补丁文件，使用-patch-命令对相应的文件打补丁","aria-hidden":"true"}},[t._v("#")]),t._v(" diff:用于比较两个文件的内容差异，可以被制作成补丁文件，使用 patch 命令对相应的文件打补丁")]),t._v(" "),s("p",[s("img",{attrs:{src:"/study/img/diff1.png",alt:"diff算法简析"}})]),t._v(" "),s("h3",{attrs:{id:"diff-算法在执行时有三个维度，分别是-tree-diff、component-diff-和-element-diff，执行时按顺序依次执行，它们的差异仅仅因为-diff-粒度不同、执行先后顺序不同。"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#diff-算法在执行时有三个维度，分别是-tree-diff、component-diff-和-element-diff，执行时按顺序依次执行，它们的差异仅仅因为-diff-粒度不同、执行先后顺序不同。","aria-hidden":"true"}},[t._v("#")]),t._v(" DIFF 算法在执行时有三个维度，分别是 Tree DIFF、Component DIFF 和 Element DIFF，执行时按顺序依次执行，它们的差异仅仅因为 DIFF 粒度不同、执行先后顺序不同。")]),t._v(" "),s("h3",{attrs:{id:"tree-diff-是对树的每一层进行遍历，如果某组件不存在了，则会直接销毁。如图所示，左边是旧属，右边是新属，第一层是-r-组件，一模一样，不会发生变化；第二层进入-component-diff，同一类型组件继续比较下去，发现-a-组件没有，所以直接删掉-a、b、c-组件；继续第三层，重新创建-a、b、c-组件。"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#tree-diff-是对树的每一层进行遍历，如果某组件不存在了，则会直接销毁。如图所示，左边是旧属，右边是新属，第一层是-r-组件，一模一样，不会发生变化；第二层进入-component-diff，同一类型组件继续比较下去，发现-a-组件没有，所以直接删掉-a、b、c-组件；继续第三层，重新创建-a、b、c-组件。","aria-hidden":"true"}},[t._v("#")]),t._v(" Tree DIFF 是对树的每一层进行遍历，如果某组件不存在了，则会直接销毁。如图所示，左边是旧属，右边是新属，第一层是 R 组件，一模一样，不会发生变化；第二层进入 Component DIFF，同一类型组件继续比较下去，发现 A 组件没有，所以直接删掉 A、B、C 组件；继续第三层，重新创建 A、B、C 组件。")]),t._v(" "),s("p",[s("img",{attrs:{src:"/study/img/diff2.png",alt:"图解"}})]),t._v(" "),s("h3",{attrs:{id:"如图所示，第一层遍历完，进行第二层遍历时，d-和-g-组件是不同类型的组件，不同类型组件直接进行替换，将-d-删掉，再将-g-重建"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#如图所示，第一层遍历完，进行第二层遍历时，d-和-g-组件是不同类型的组件，不同类型组件直接进行替换，将-d-删掉，再将-g-重建","aria-hidden":"true"}},[t._v("#")]),t._v(" 如图所示，第一层遍历完，进行第二层遍历时，D 和 G 组件是不同类型的组件，不同类型组件直接进行替换，将 D 删掉，再将 G 重建")]),t._v(" "),s("p",[s("img",{attrs:{src:"/study/img/diff3.png",alt:"图解"}})]),t._v(" "),s("h3",{attrs:{id:"作用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#作用","aria-hidden":"true"}},[t._v("#")]),t._v(" 作用")]),t._v(" "),s("ul",[s("li",[t._v("计算出 Virtual DOM 中真正变化的部分，并只针对该部分进行原生 DOM 操作，而非重新渲染整个页面。")])]),t._v(" "),s("h3",{attrs:{id:"传统-diff-算法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#传统-diff-算法","aria-hidden":"true"}},[t._v("#")]),t._v(" 传统 diff 算法")]),t._v(" "),s("ul",[s("li",[t._v("通过循环递归对节点进行依次对比，算法复杂度达到 O(n^3) ，n 是树的节点数，这个有多可怕呢？——如果要展示 1000 个节点，得执行上亿次比较。。即便是 CPU 快能执行 30 亿条命令，也很难在一秒内计算出差异。")])]),t._v(" "),s("h2",{attrs:{id:"vue"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#vue","aria-hidden":"true"}},[t._v("#")]),t._v(" Vue")]),t._v(" "),s("h3",{attrs:{id:"当数据发生变化时，vue-是怎么更新节点的？"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#当数据发生变化时，vue-是怎么更新节点的？","aria-hidden":"true"}},[t._v("#")]),t._v(" 当数据发生变化时，vue 是怎么更新节点的？")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("要知道渲染真实 DOM 的开销是很大的，比如有时候我们修改了某个数据，如果直接渲染到真实 dom 上会引起整个 dom 树的重绘和重排，有没有可能我们只更新我们修改的那一小块 dom 而不要更新整个 dom 呢？diff 算法能够帮助我们。")])]),t._v(" "),s("li",[s("p",[t._v("我们先根据真实 DOM 生成一颗 virtual DOM，当 virtual DOM 某个节点的数据改变后会生成一个新的 Vnode，然后 Vnode 和 oldVnode 作对比，发现有不一样的地方就直接修改在真实的 DOM 上，然后使 oldVnode 的值为 Vnode。")])]),t._v(" "),s("li",[s("p",[t._v("diff 的过程就是调用名为 patch 的函数，比较新旧节点，一边比较一边给真实的 DOM 打补丁。")])])]),t._v(" "),s("h3",{attrs:{id:"virtual-dom-和真实-dom-的区别？"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#virtual-dom-和真实-dom-的区别？","aria-hidden":"true"}},[t._v("#")]),t._v(" virtual DOM 和真实 DOM 的区别？")]),t._v(" "),s("ul",[s("li",[t._v("virtual DOM 是将真实的 DOM 的数据抽取出来，以对象的形式模拟树形结构。比如 dom 是这样的：")])]),t._v(" "),s("div",{staticClass:"language-html extra-class"},[s("pre",{pre:!0,attrs:{class:"language-html"}},[s("code",[s("span",{attrs:{class:"token tag"}},[s("span",{attrs:{class:"token tag"}},[s("span",{attrs:{class:"token punctuation"}},[t._v("<")]),t._v("div")]),s("span",{attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  "),s("span",{attrs:{class:"token tag"}},[s("span",{attrs:{class:"token tag"}},[s("span",{attrs:{class:"token punctuation"}},[t._v("<")]),t._v("p")]),s("span",{attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("123"),s("span",{attrs:{class:"token tag"}},[s("span",{attrs:{class:"token tag"}},[s("span",{attrs:{class:"token punctuation"}},[t._v("</")]),t._v("p")]),s("span",{attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),s("span",{attrs:{class:"token tag"}},[s("span",{attrs:{class:"token tag"}},[s("span",{attrs:{class:"token punctuation"}},[t._v("</")]),t._v("div")]),s("span",{attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),s("ul",[s("li",[t._v("对应的 virtual DOM（伪代码）：")])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" Vnode "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  tag"),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{attrs:{class:"token string"}},[t._v('"div"')]),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  children"),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" tag"),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{attrs:{class:"token string"}},[t._v('"p"')]),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" text"),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{attrs:{class:"token string"}},[t._v('"123"')]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("h3",{attrs:{id:"diff-的比较方式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#diff-的比较方式","aria-hidden":"true"}},[t._v("#")]),t._v(" diff 的比较方式?")]),t._v(" "),s("ul",[s("li",[t._v("在采取 diff 算法比较新旧节点的时候，比较只会在同层级进行, 不会跨层级比较。")])]),t._v(" "),s("div",{staticClass:"language-html extra-class"},[s("pre",{pre:!0,attrs:{class:"language-html"}},[s("code",[s("span",{attrs:{class:"token tag"}},[s("span",{attrs:{class:"token tag"}},[s("span",{attrs:{class:"token punctuation"}},[t._v("<")]),t._v("div")]),s("span",{attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  "),s("span",{attrs:{class:"token tag"}},[s("span",{attrs:{class:"token tag"}},[s("span",{attrs:{class:"token punctuation"}},[t._v("<")]),t._v("p")]),s("span",{attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("123"),s("span",{attrs:{class:"token tag"}},[s("span",{attrs:{class:"token tag"}},[s("span",{attrs:{class:"token punctuation"}},[t._v("</")]),t._v("p")]),s("span",{attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),s("span",{attrs:{class:"token tag"}},[s("span",{attrs:{class:"token tag"}},[s("span",{attrs:{class:"token punctuation"}},[t._v("</")]),t._v("div")]),s("span",{attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n\n"),s("span",{attrs:{class:"token tag"}},[s("span",{attrs:{class:"token tag"}},[s("span",{attrs:{class:"token punctuation"}},[t._v("<")]),t._v("div")]),s("span",{attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  "),s("span",{attrs:{class:"token tag"}},[s("span",{attrs:{class:"token tag"}},[s("span",{attrs:{class:"token punctuation"}},[t._v("<")]),t._v("span")]),s("span",{attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("456"),s("span",{attrs:{class:"token tag"}},[s("span",{attrs:{class:"token tag"}},[s("span",{attrs:{class:"token punctuation"}},[t._v("</")]),t._v("span")]),s("span",{attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),s("span",{attrs:{class:"token tag"}},[s("span",{attrs:{class:"token tag"}},[s("span",{attrs:{class:"token punctuation"}},[t._v("</")]),t._v("div")]),s("span",{attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),s("ul",[s("li",[t._v("上面的代码会分别比较同一层的两个 div 以及第二层的 p 和 span，但是不会拿 div 和 span 作比较。在别处看到的一张很形象的图：")])]),t._v(" "),s("p",[s("img",{attrs:{src:"/study/img/diff4.png",alt:"diff树比较"}})]),t._v(" "),s("h3",{attrs:{id:"diff-流程图"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#diff-流程图","aria-hidden":"true"}},[t._v("#")]),t._v(" diff 流程图")]),t._v(" "),s("ul",[s("li",[t._v("当数据发生改变时，set 方法会让调用 Dep.notify 通知所有订阅者 Watcher，订阅者就会调用 patch 给真实的 DOM 打补丁，更新相应的视图。")])]),t._v(" "),s("p",[s("img",{attrs:{src:"/study/img/diff5.png",alt:"diff流程图"}})]),t._v(" "),s("h3",{attrs:{id:"key"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#key","aria-hidden":"true"}},[t._v("#")]),t._v(" Key")]),t._v(" "),s("ul",[s("li",[t._v("可以标识组件的唯一性，为了更好地区别各个组件 key 的作用主要是为了高效的更新虚拟 DOM。另外 vue 中在使用相同标签名元素的过渡切换时，也会使用到 key 属性，其目的也是为了让 vue 可以区分它们，否则 vue 只会替换其内部属性而不会触发过渡效果。")])]),t._v(" "),s("h2",{attrs:{id:"react"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#react","aria-hidden":"true"}},[t._v("#")]),t._v(" React")]),t._v(" "),s("h4",{attrs:{id:"render-执行的结果得到的不是真正的-dom-节点-结果仅仅是轻量级的-javascript-对象-我们称之为-virtual-dom"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#render-执行的结果得到的不是真正的-dom-节点-结果仅仅是轻量级的-javascript-对象-我们称之为-virtual-dom","aria-hidden":"true"}},[t._v("#")]),t._v(" render 执行的结果得到的不是真正的 DOM 节点.结果仅仅是轻量级的 JavaScript 对象, 我们称之为 virtual DOM.")]),t._v(" "),s("h3",{attrs:{id:"react-工作流程"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#react-工作流程","aria-hidden":"true"}},[t._v("#")]),t._v(" React 工作流程")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" MyComponent "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" React"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("createClass")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  render"),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{attrs:{class:"token keyword"}},[t._v("function")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token keyword"}},[t._v("this")]),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("props"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("first"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),s("span",{attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n        "),s("span",{attrs:{class:"token operator"}},[t._v("<")]),t._v("div className"),s("span",{attrs:{class:"token operator"}},[t._v("=")]),s("span",{attrs:{class:"token string"}},[t._v('"first"')]),s("span",{attrs:{class:"token operator"}},[t._v(">")]),t._v("\n          "),s("span",{attrs:{class:"token operator"}},[t._v("<")]),t._v("span"),s("span",{attrs:{class:"token operator"}},[t._v(">")]),s("span",{attrs:{class:"token constant"}},[t._v("A")]),t._v(" Span"),s("span",{attrs:{class:"token operator"}},[t._v("<")]),s("span",{attrs:{class:"token operator"}},[t._v("/")]),t._v("span"),s("span",{attrs:{class:"token operator"}},[t._v(">")]),t._v("\n        "),s("span",{attrs:{class:"token operator"}},[t._v("<")]),s("span",{attrs:{class:"token operator"}},[t._v("/")]),t._v("div"),s("span",{attrs:{class:"token operator"}},[t._v(">")]),t._v("\n      "),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),s("span",{attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n        "),s("span",{attrs:{class:"token operator"}},[t._v("<")]),t._v("div className"),s("span",{attrs:{class:"token operator"}},[t._v("=")]),s("span",{attrs:{class:"token string"}},[t._v('"second"')]),s("span",{attrs:{class:"token operator"}},[t._v(">")]),t._v("\n          "),s("span",{attrs:{class:"token operator"}},[t._v("<")]),t._v("p"),s("span",{attrs:{class:"token operator"}},[t._v(">")]),s("span",{attrs:{class:"token constant"}},[t._v("A")]),t._v(" Paragraph"),s("span",{attrs:{class:"token operator"}},[t._v("<")]),s("span",{attrs:{class:"token operator"}},[t._v("/")]),t._v("p"),s("span",{attrs:{class:"token operator"}},[t._v(">")]),t._v("\n        "),s("span",{attrs:{class:"token operator"}},[t._v("<")]),s("span",{attrs:{class:"token operator"}},[t._v("/")]),t._v("div"),s("span",{attrs:{class:"token operator"}},[t._v(">")]),t._v("\n      "),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("ul",[s("li",[t._v("React 要从这个表现形式当中尝试找到前一个渲染结果到后一个的最小步数.\n比如, 当我们挂载了")])]),t._v(" "),s("div",{staticClass:"language-html extra-class"},[s("pre",{pre:!0,attrs:{class:"language-html"}},[s("code",[s("span",{attrs:{class:"token tag"}},[s("span",{attrs:{class:"token tag"}},[s("span",{attrs:{class:"token punctuation"}},[t._v("<")]),t._v("MyComponent")]),t._v(" "),s("span",{attrs:{class:"token attr-name"}},[t._v("first")]),s("span",{attrs:{class:"token attr-value"}},[s("span",{attrs:{class:"token punctuation"}},[t._v("=")]),s("span",{attrs:{class:"token punctuation"}},[t._v('"')]),t._v("{true}"),s("span",{attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("/>")])]),t._v("\n")])])]),s("p",[t._v(", 然后用")]),t._v(" "),s("div",{staticClass:"language-html extra-class"},[s("pre",{pre:!0,attrs:{class:"language-html"}},[s("code",[s("span",{attrs:{class:"token tag"}},[s("span",{attrs:{class:"token tag"}},[s("span",{attrs:{class:"token punctuation"}},[t._v("<")]),t._v("MyComponent")]),t._v(" "),s("span",{attrs:{class:"token attr-name"}},[t._v("first")]),s("span",{attrs:{class:"token attr-value"}},[s("span",{attrs:{class:"token punctuation"}},[t._v("=")]),s("span",{attrs:{class:"token punctuation"}},[t._v('"')]),t._v("{false}"),s("span",{attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("/>")])]),t._v("\n")])])]),s("p",[t._v("替换, 然后又取消挂载,\n这样一个过程的 DOM 的指令是这样的:")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("从没有到第一步")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("创建节点:")]),t._v(" "),s("div",{staticClass:"language-html extra-class"},[s("pre",{pre:!0,attrs:{class:"language-html"}},[s("code",[s("span",{attrs:{class:"token tag"}},[s("span",{attrs:{class:"token tag"}},[s("span",{attrs:{class:"token punctuation"}},[t._v("<")]),t._v("div")]),t._v(" "),s("span",{attrs:{class:"token attr-name"}},[t._v("className")]),s("span",{attrs:{class:"token attr-value"}},[s("span",{attrs:{class:"token punctuation"}},[t._v("=")]),s("span",{attrs:{class:"token punctuation"}},[t._v('"')]),t._v("first"),s("span",{attrs:{class:"token punctuation"}},[t._v('"')])]),s("span",{attrs:{class:"token punctuation"}},[t._v(">")])]),s("span",{attrs:{class:"token tag"}},[s("span",{attrs:{class:"token tag"}},[s("span",{attrs:{class:"token punctuation"}},[t._v("<")]),t._v("span")]),s("span",{attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("A Span"),s("span",{attrs:{class:"token tag"}},[s("span",{attrs:{class:"token tag"}},[s("span",{attrs:{class:"token punctuation"}},[t._v("</")]),t._v("span")]),s("span",{attrs:{class:"token punctuation"}},[t._v(">")])]),s("span",{attrs:{class:"token tag"}},[s("span",{attrs:{class:"token tag"}},[s("span",{attrs:{class:"token punctuation"}},[t._v("</")]),t._v("div")]),s("span",{attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])])])])]),t._v(" "),s("li",[s("p",[t._v("第一步到第二步")]),t._v(" "),s("ul",[s("li",[s("p",[t._v('替换属性: className="first" 到 className="second"')])]),t._v(" "),s("li",[s("p",[t._v("替换节点:")]),t._v(" "),s("div",{staticClass:"language-html extra-class"},[s("pre",{pre:!0,attrs:{class:"language-html"}},[s("code",[s("span",{attrs:{class:"token tag"}},[s("span",{attrs:{class:"token tag"}},[s("span",{attrs:{class:"token punctuation"}},[t._v("<")]),t._v("span")]),s("span",{attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("A Span"),s("span",{attrs:{class:"token tag"}},[s("span",{attrs:{class:"token tag"}},[s("span",{attrs:{class:"token punctuation"}},[t._v("</")]),t._v("span")]),s("span",{attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" 到\n"),s("span",{attrs:{class:"token tag"}},[s("span",{attrs:{class:"token tag"}},[s("span",{attrs:{class:"token punctuation"}},[t._v("<")]),t._v("p")]),s("span",{attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("A Paragraph"),s("span",{attrs:{class:"token tag"}},[s("span",{attrs:{class:"token tag"}},[s("span",{attrs:{class:"token punctuation"}},[t._v("</")]),t._v("p")]),s("span",{attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])])])])]),t._v(" "),s("li",[s("p",[t._v("第二步到没有")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("删除节点:")]),t._v(" "),s("div",{staticClass:"language-html extra-class"},[s("pre",{pre:!0,attrs:{class:"language-html"}},[s("code",[s("span",{attrs:{class:"token tag"}},[s("span",{attrs:{class:"token tag"}},[s("span",{attrs:{class:"token punctuation"}},[t._v("<")]),t._v("div")]),t._v(" "),s("span",{attrs:{class:"token attr-name"}},[t._v("className")]),s("span",{attrs:{class:"token attr-value"}},[s("span",{attrs:{class:"token punctuation"}},[t._v("=")]),s("span",{attrs:{class:"token punctuation"}},[t._v('"')]),t._v("second"),s("span",{attrs:{class:"token punctuation"}},[t._v('"')])]),s("span",{attrs:{class:"token punctuation"}},[t._v(">")])]),s("span",{attrs:{class:"token tag"}},[s("span",{attrs:{class:"token tag"}},[s("span",{attrs:{class:"token punctuation"}},[t._v("<")]),t._v("p")]),s("span",{attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("A Paragraph"),s("span",{attrs:{class:"token tag"}},[s("span",{attrs:{class:"token tag"}},[s("span",{attrs:{class:"token punctuation"}},[t._v("</")]),t._v("p")]),s("span",{attrs:{class:"token punctuation"}},[t._v(">")])]),s("span",{attrs:{class:"token tag"}},[s("span",{attrs:{class:"token tag"}},[s("span",{attrs:{class:"token punctuation"}},[t._v("</")]),t._v("div")]),s("span",{attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])])])])])]),t._v(" "),s("h4",{attrs:{id:"调和：将-virtual-dom-树转换成-actual-dom-树的最少操作的过程-称为-调和-。"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#调和：将-virtual-dom-树转换成-actual-dom-树的最少操作的过程-称为-调和-。","aria-hidden":"true"}},[t._v("#")]),t._v(" 调和：将 Virtual DOM 树转换成 actual DOM 树的最少操作的过程 称为 调和 。")]),t._v(" "),s("h4",{attrs:{id:"react-diff-算法：diff-算法是调和的具体实现。"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#react-diff-算法：diff-算法是调和的具体实现。","aria-hidden":"true"}},[t._v("#")]),t._v(" React diff 算法：diff 算法是调和的具体实现。")]),t._v(" "),s("h3",{attrs:{id:"diff-策略"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#diff-策略","aria-hidden":"true"}},[t._v("#")]),t._v(" diff 策略")]),t._v(" "),s("h4",{attrs:{id:"react-用-三大策略-将-o-n-3-复杂度-转化为-o-n-复杂度"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#react-用-三大策略-将-o-n-3-复杂度-转化为-o-n-复杂度","aria-hidden":"true"}},[t._v("#")]),t._v(" React 用 三大策略 将 O(n^3)复杂度 转化为 O(n)复杂度")]),t._v(" "),s("ul",[s("li",[t._v("策略一（tree diff）：\nWeb UI 中 DOM 节点跨层级的移动操作特别少，可以忽略不计。")]),t._v(" "),s("li",[t._v("策略二（component diff）：\n拥有相同类的两个组件 生成相似的树形结构，\n拥有不同类的两个组件 生成不同的树形结构。")]),t._v(" "),s("li",[t._v("策略三（element diff）：\n对于同一层级的一组子节点，通过唯一 id 区分。")])]),t._v(" "),s("h3",{attrs:{id:"component-diff"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#component-diff","aria-hidden":"true"}},[t._v("#")]),t._v(" component diff")]),t._v(" "),s("h4",{attrs:{id:"react-对不同的组件间的比较，有三种策略"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#react-对不同的组件间的比较，有三种策略","aria-hidden":"true"}},[t._v("#")]),t._v(" React 对不同的组件间的比较，有三种策略")]),t._v(" "),s("ul",[s("li",[t._v("同一类型的两个组件，按原策略（层级比较）继续比较 Virtual DOM 树即可。")]),t._v(" "),s("li",[t._v("同一类型的两个组件，组件 A 变化为组件 B 时，可能 Virtual DOM 没有任何变化，如果知道这点（变换的过程中，Virtual DOM 没有改变），可节省大量计算时间，所以 用户 可以通过 shouldComponentUpdate() 来判断是否需要 判断计算。")]),t._v(" "),s("li",[t._v("不同类型的组件，将一个（将被改变的）组件判断为 dirty component（脏组件），从而替换 整个组件的所有节点")]),t._v(" "),s("li",[t._v("注意：如果组件 D 和组件 G 的结构相似，但是 React 判断是 不同类型的组件，则不会比较其结构，而是删除 组件 D 及其子节点，创建组件 G 及其子节点。")])]),t._v(" "),s("h3",{attrs:{id:"element-diff"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#element-diff","aria-hidden":"true"}},[t._v("#")]),t._v(" element diff")]),t._v(" "),s("h4",{attrs:{id:"当节点处于同一层级时，diff-提供三种节点操作：删除、插入、移动。"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#当节点处于同一层级时，diff-提供三种节点操作：删除、插入、移动。","aria-hidden":"true"}},[t._v("#")]),t._v(" 当节点处于同一层级时，diff 提供三种节点操作：删除、插入、移动。")]),t._v(" "),s("ul",[s("li",[t._v("插入：组件 C 不在集合（A,B）中，需要插入")]),t._v(" "),s("li",[t._v("删除：（1）组件 D 在集合（A,B,D）中，但 D 的节点已经更改，不能复用和更新，所以需要删除 旧的 D ，再创建新的。\n（2）组件 D 之前在 集合（A,B,D）中，但集合变成新的集合（A,B）了，D 就需要被删除。\n移动：组件 D 已经在集合（A,B,C,D）里了，且集合更新时，D 没有发生更新，只是位置改变，如新集合（A,D,B,C），D 在第二个，无须像传统 diff，让旧集合的第二个 B 和新集合的第二个 D 比较，并且删除第二个位置的 B，再在第二个位置插入 D，而是 （对同一层级的同组子节点） 添加唯一 key 进行区分，移动即可。")])]),t._v(" "),s("h3",{attrs:{id:"如果-dom-节点出现了跨层级操作-diff-会咋办呢？"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#如果-dom-节点出现了跨层级操作-diff-会咋办呢？","aria-hidden":"true"}},[t._v("#")]),t._v(" 如果 DOM 节点出现了跨层级操作,diff 会咋办呢？")]),t._v(" "),s("ul",[s("li",[t._v("答：diff 只简单考虑同层级的节点位置变换，如果是跨层级的话，只有创建节点和删除节点的操作。")])]),t._v(" "),s("h4",{attrs:{id:"重点说下移动的逻辑："}},[s("a",{staticClass:"header-anchor",attrs:{href:"#重点说下移动的逻辑：","aria-hidden":"true"}},[t._v("#")]),t._v(" 重点说下移动的逻辑：")]),t._v(" "),s("h5",{attrs:{id:"情形一：新旧集合中存在相同节点但位置不同时，如何移动节点"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#情形一：新旧集合中存在相同节点但位置不同时，如何移动节点","aria-hidden":"true"}},[t._v("#")]),t._v(" 情形一：新旧集合中存在相同节点但位置不同时，如何移动节点")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://upload-images.jianshu.io/upload_images/5518628-89bb3cd6ebdb4296.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/642/format/webp",alt:"图解"}})]),t._v(" "),s("ul",[s("li",[t._v("看着上图的 B，React 先从新中取得 B，然后判断旧中是否存在相同节点 B，当发现存在节点 B 后，就去判断是否移动 B。\nB 在旧 中的 index=1，它的 lastIndex=0，不满足 index < lastIndex 的条件，因此 B 不做移动操作。此时，一个操作是，lastIndex=(index,lastIndex)中的较大数=1.\n注意：lastIndex 有点像浮标，或者说是一个 map 的索引，一开始默认值是 0，它会与 map 中的元素进行比较，比较完后，会改变自己的值的（取 index 和 lastIndex 的较大数）。")]),t._v(" "),s("li",[t._v("看着 A，A 在旧的 index=0，此时的 lastIndex=1（因为先前与新的 B 比较过了），满足 index < lastIndex，因此，对 A 进行移动操作，此时 lastIndex=max(index,lastIndex)=1。")]),t._v(" "),s("li",[t._v("看着 D，同（1），不移动，由于 D 在旧的 index=3，比较时，lastIndex=1，所以改变 lastIndex=max(index,lastIndex)=3")]),t._v(" "),s("li",[t._v("看着 C，同（2），移动，C 在旧的 index=2，满足 index < lastIndex（lastIndex=3），所以移动。\n由于 C 已经是最后一个节点，所以 diff 操作结束。")])]),t._v(" "),s("h5",{attrs:{id:"情形二：新集合中有新加入的节点，旧集合中有删除的节点"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#情形二：新集合中有新加入的节点，旧集合中有删除的节点","aria-hidden":"true"}},[t._v("#")]),t._v(" 情形二：新集合中有新加入的节点，旧集合中有删除的节点")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://upload-images.jianshu.io/upload_images/5518628-eb7ef5477ea1a678.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/601/format/webp",alt:"图解"}})]),t._v(" "),s("ul",[s("li",[t._v("B 不移动，不赘述，更新 l astIndex=1")]),t._v(" "),s("li",[t._v("新集合取得 E，发现旧不存在，故在 lastIndex=1 的位置 创建 E，更新 lastIndex=1")]),t._v(" "),s("li",[t._v("新集合取得 C，C 不移动，更新 lastIndex=2")]),t._v(" "),s("li",[t._v("新集合取得 A，A 移动，同上，更新 lastIndex=2")]),t._v(" "),s("li",[t._v("新集合对比后，再对旧集合遍历。判断 新集合 没有，但 旧集合 有的元素（如 D，新集合没有，旧集合有），发现 D，删除 D，diff 操作结束。")])]),t._v(" "),s("h5",{attrs:{id:"diff-的不足与待优化的地方"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#diff-的不足与待优化的地方","aria-hidden":"true"}},[t._v("#")]),t._v(" diff 的不足与待优化的地方")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://upload-images.jianshu.io/upload_images/5518628-aea2bb7e8e843db6.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/636/format/webp",alt:"图解"}})]),t._v(" "),s("ul",[s("li",[t._v("看图的 D，此时 D 不移动，但它的 index 是最大的，导致更新 lastIndex=3，从而使得其他元素 A,B,C 的 index < lastIndex，导致 A,B,C 都要去移动。")]),t._v(" "),s("li",[t._v("理想情况是只移动 D，不移动 A,B,C。因此，在开发过程中，尽量减少类似将最后一个节点移动到列表首部的操作，当节点数量过大或更新操作过于频繁时，会影响 React 的渲染性能。")])]),t._v(" "),s("h2",{attrs:{id:"diff-js"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#diff-js","aria-hidden":"true"}},[t._v("#")]),t._v(" diff.js")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{attrs:{class:"token comment"}},[t._v("/**\n * Diff two list in O(N).\n * @param {Array} oldList - Original List\n * @param {Array} newList - List After certain insertions, removes, or moves\n * @return {Object} - {moves: <Array>}\n *                  - moves is a list of actions that telling how to remove and insert\n */")]),t._v("\n"),s("span",{attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{attrs:{class:"token function"}},[t._v("diff")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("oldList"),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" newList"),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" key"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" oldMap "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{attrs:{class:"token function"}},[t._v("makeKeyIndexAndFree")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("oldList"),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" key"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" newMap "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{attrs:{class:"token function"}},[t._v("makeKeyIndexAndFree")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("newList"),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" key"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n  "),s("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" newFree "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" newMap"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("free"),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n  "),s("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" oldKeyIndex "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" oldMap"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("keyIndex"),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" newKeyIndex "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" newMap"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("keyIndex"),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n  "),s("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" moves "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n  "),s("span",{attrs:{class:"token comment"}},[t._v("// a simulate list to manipulate")]),t._v("\n  "),s("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" children "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" i "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{attrs:{class:"token number"}},[t._v("0")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" item"),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" itemKey"),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" freeIndex "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{attrs:{class:"token number"}},[t._v("0")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n  "),s("span",{attrs:{class:"token comment"}},[t._v("// fist pass to check item in old list: if it's removed or not")]),t._v("\n  "),s("span",{attrs:{class:"token keyword"}},[t._v("while")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i "),s("span",{attrs:{class:"token operator"}},[t._v("<")]),t._v(" oldList"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    item "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" oldList"),s("span",{attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),s("span",{attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    itemKey "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{attrs:{class:"token function"}},[t._v("getItemKey")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("item"),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" key"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("itemKey"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),s("span",{attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token operator"}},[t._v("!")]),t._v("newKeyIndex"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("hasOwnProperty")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("itemKey"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        children"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("push")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token keyword"}},[t._v("null")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      "),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" newItemIndex "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" newKeyIndex"),s("span",{attrs:{class:"token punctuation"}},[t._v("[")]),t._v("itemKey"),s("span",{attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        children"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("push")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("newList"),s("span",{attrs:{class:"token punctuation"}},[t._v("[")]),t._v("newItemIndex"),s("span",{attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      "),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),s("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" freeItem "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" newFree"),s("span",{attrs:{class:"token punctuation"}},[t._v("[")]),t._v("freeIndex"),s("span",{attrs:{class:"token operator"}},[t._v("++")]),s("span",{attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      children"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("push")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("freeItem "),s("span",{attrs:{class:"token operator"}},[t._v("||")]),t._v(" "),s("span",{attrs:{class:"token keyword"}},[t._v("null")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    i"),s("span",{attrs:{class:"token operator"}},[t._v("++")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n  "),s("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" simulateList "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" children"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("slice")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token number"}},[t._v("0")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n  "),s("span",{attrs:{class:"token comment"}},[t._v("// remove items no longer exist")]),t._v("\n  i "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{attrs:{class:"token number"}},[t._v("0")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{attrs:{class:"token keyword"}},[t._v("while")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i "),s("span",{attrs:{class:"token operator"}},[t._v("<")]),t._v(" simulateList"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("simulateList"),s("span",{attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),s("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),s("span",{attrs:{class:"token keyword"}},[t._v("null")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),s("span",{attrs:{class:"token function"}},[t._v("remove")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      "),s("span",{attrs:{class:"token function"}},[t._v("removeSimulate")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      i"),s("span",{attrs:{class:"token operator"}},[t._v("++")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n  "),s("span",{attrs:{class:"token comment"}},[t._v("// i is cursor pointing to a item in new list")]),t._v("\n  "),s("span",{attrs:{class:"token comment"}},[t._v("// j is cursor pointing to a item in simulateList")]),t._v("\n  "),s("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" j "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{attrs:{class:"token number"}},[t._v("0")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{attrs:{class:"token keyword"}},[t._v("while")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i "),s("span",{attrs:{class:"token operator"}},[t._v("<")]),t._v(" newList"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    item "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" newList"),s("span",{attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),s("span",{attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    itemKey "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{attrs:{class:"token function"}},[t._v("getItemKey")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("item"),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" key"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),s("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" simulateItem "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" simulateList"),s("span",{attrs:{class:"token punctuation"}},[t._v("[")]),t._v("j"),s("span",{attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" simulateItemKey "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{attrs:{class:"token function"}},[t._v("getItemKey")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("simulateItem"),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" key"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),s("span",{attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("simulateItem"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),s("span",{attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("itemKey "),s("span",{attrs:{class:"token operator"}},[t._v("===")]),t._v(" simulateItemKey"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        j"),s("span",{attrs:{class:"token operator"}},[t._v("++")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      "),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{attrs:{class:"token comment"}},[t._v("// new item, just inesrt it")]),t._v("\n        "),s("span",{attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token operator"}},[t._v("!")]),t._v("oldKeyIndex"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("hasOwnProperty")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("itemKey"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n          "),s("span",{attrs:{class:"token function"}},[t._v("insert")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i"),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" item"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n          "),s("span",{attrs:{class:"token comment"}},[t._v("// if remove current simulateItem make item in right place")]),t._v("\n          "),s("span",{attrs:{class:"token comment"}},[t._v("// then just remove it")]),t._v("\n          "),s("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" nextItemKey "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{attrs:{class:"token function"}},[t._v("getItemKey")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("simulateList"),s("span",{attrs:{class:"token punctuation"}},[t._v("[")]),t._v("j "),s("span",{attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{attrs:{class:"token number"}},[t._v("1")]),s("span",{attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" key"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n          "),s("span",{attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("nextItemKey "),s("span",{attrs:{class:"token operator"}},[t._v("===")]),t._v(" itemKey"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),s("span",{attrs:{class:"token function"}},[t._v("remove")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),s("span",{attrs:{class:"token function"}},[t._v("removeSimulate")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("j"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            j"),s("span",{attrs:{class:"token operator"}},[t._v("++")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{attrs:{class:"token comment"}},[t._v("// after removing, current j is right, just jump to next one")]),t._v("\n          "),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),s("span",{attrs:{class:"token comment"}},[t._v("// else insert item")]),t._v("\n            "),s("span",{attrs:{class:"token function"}},[t._v("insert")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i"),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" item"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n          "),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n      "),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),s("span",{attrs:{class:"token function"}},[t._v("insert")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i"),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" item"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    i"),s("span",{attrs:{class:"token operator"}},[t._v("++")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n  "),s("span",{attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{attrs:{class:"token function"}},[t._v("remove")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("index"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" move "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" index"),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" index"),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" type"),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{attrs:{class:"token number"}},[t._v("0")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    moves"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("push")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("move"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n  "),s("span",{attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{attrs:{class:"token function"}},[t._v("insert")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("index"),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" item"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" move "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" index"),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" index"),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" item"),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" item"),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" type"),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{attrs:{class:"token number"}},[t._v("1")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    moves"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("push")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("move"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n  "),s("span",{attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{attrs:{class:"token function"}},[t._v("removeSimulate")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("index"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    simulateList"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("splice")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("index"),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{attrs:{class:"token number"}},[t._v("1")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n  "),s("span",{attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    moves"),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" moves"),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    children"),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" children\n  "),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{attrs:{class:"token comment"}},[t._v("/**\n * Convert list to key-item keyIndex object.\n * @param {Array} list\n * @param {String|Function} key\n */")]),t._v("\n"),s("span",{attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{attrs:{class:"token function"}},[t._v("makeKeyIndexAndFree")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("list"),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" key"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" keyIndex "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" free "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" i "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{attrs:{class:"token number"}},[t._v("0")]),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" len "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" list"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length"),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),s("span",{attrs:{class:"token operator"}},[t._v("<")]),t._v(" len"),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i"),s("span",{attrs:{class:"token operator"}},[t._v("++")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" item "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" list"),s("span",{attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),s("span",{attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" itemKey "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{attrs:{class:"token function"}},[t._v("getItemKey")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("item"),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" key"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("itemKey"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      keyIndex"),s("span",{attrs:{class:"token punctuation"}},[t._v("[")]),t._v("itemKey"),s("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" i"),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      free"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("push")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("item"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),s("span",{attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    keyIndex"),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" keyIndex"),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    free"),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" free\n  "),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{attrs:{class:"token function"}},[t._v("getItemKey")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("item"),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" key"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token operator"}},[t._v("!")]),t._v("item "),s("span",{attrs:{class:"token operator"}},[t._v("||")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("!")]),t._v("key"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{attrs:{class:"token number"}},[t._v("666")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" key "),s("span",{attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),s("span",{attrs:{class:"token string"}},[t._v('"string"')]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("?")]),t._v(" item"),s("span",{attrs:{class:"token punctuation"}},[t._v("[")]),t._v("key"),s("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{attrs:{class:"token function"}},[t._v("key")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("item"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\nexports"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("makeKeyIndexAndFree "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" makeKeyIndexAndFree"),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{attrs:{class:"token comment"}},[t._v("// exports for test")]),t._v("\nexports"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("diff "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" diff"),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("h2",{attrs:{id:"总结"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#总结","aria-hidden":"true"}},[t._v("#")]),t._v(" 总结")]),t._v(" "),s("ul",[s("li",[t._v("尽量不要跨层级的修改 dom")]),t._v(" "),s("li",[t._v("设置 key 可以最大化的利用节点")]),t._v(" "),s("li",[t._v("diff 的效率并不是每种情况下都是最优的")])])])}],!1,null,null,null);a.default=e.exports}}]);